genrule(
  name="stdint",
  cmd='echo "#include <stdint.h>" > $(OUTS)',
  outs=['src/fcstdint.h']
)

genrule(
  name="alias",
  cmd='echo "" > $(OUTS)',
  outs=['src/fcalias.h']
)

genrule(
  name="alias2",
  cmd='echo "" > $(OUTS)',
  outs=['src/fcftalias.h']
)

genrule(
  name="aliastail",
  cmd='echo "" > $(OUTS)',
  outs=['src/fcaliastail.h']
)

genrule(
  name="aliastail2",
  cmd='echo "" > $(OUTS)',
  outs=['src/fcftaliastail.h']
)

DEFINES = [
  'FLEXIBLE_ARRAY_MEMBER',
  'ALIGNOF_VOID_P=8',
  'SIZEOF_VOID_P=8',
  'ALIGNOF_DOUBLE=8',
  'SIZEOF_DOUBLE=8',
  'FC_GPERF_SIZE_T=unsigned',
  'FC_DEFAULT_FONTS=\\"/usr/share/fonts\\"',
  'FC_CACHEDIR=\\"/var/cache/fontconfig\\"',
  'FONTCONFIG_PATH=\\"/etc/fonts\\"',
  'HAVE_MKSTEMP',
  'HAVE_SYS_TYPES_H',
  'HAVE_SYS_STAT_H',
  'HAVE_FCNTL_H',
  'HAVE_RAND'
]

cc_library(
  name = 'src_hdrs',
  hdrs = glob(['fontconfig/*.h', 'src/*.h']) + [
    'src/fcalias.h',
    'src/fcftalias.h',
    'src/fcstdint.h',
    'src/fcaliastail.h',
    'src/fcftaliastail.h',
  ],
  includes = ['src', '.'],
)

cc_binary(
  name = 'fc-case',
  srcs = ['fc-case/fc-case.c'],
  deps = [':src_hdrs'],
  defines = DEFINES,
)

genrule(
  name = 'fccase_rule',
  srcs = ['fc-case/CaseFolding.txt', 'fc-case/fccase.tmpl.h'],
  tools = [':fc-case'],
  outs = ['fc-case/fccase.h'],
  cmd = './$(location :fc-case) $(location fc-case/CaseFolding.txt) < $(location fc-case/fccase.tmpl.h) > $(OUTS)',
)

cc_library(
  name = 'fclangdeps',
  textual_hdrs = ['src/fccharset.c', 'src/fcstr.c', 'src/fcserialize.c']
)

cc_binary(
  name = 'fc-lang',
  srcs = ['fc-lang/fc-lang.c'],
  deps = [':src_hdrs', ':fclangdeps', ':fccase_h'],
  defines = DEFINES,
)

# NOTE:
#
# The order of the orth files here is extremely important (part of the cache
# format) and should not be modified.  New orth files should be added at the
# end.  No files should be removed either.
#
ORTH = [
	'aa.orth',
	'ab.orth',
	'af.orth',
	'am.orth',
	'ar.orth',
	'as.orth',
	'ast.orth',
	'av.orth',
	'ay.orth',
	'az_az.orth',
	'az_ir.orth',
	'ba.orth',
	'bm.orth',
	'be.orth',
	'bg.orth',
	'bh.orth',
	'bho.orth',
	'bi.orth',
	'bin.orth',
	'bn.orth',
	'bo.orth',
	'br.orth',
	'bs.orth',
	'bua.orth',
	'ca.orth',
	'ce.orth',
	'ch.orth',
	'chm.orth',
	'chr.orth',
	'co.orth',
	'cs.orth',
	'cu.orth',
	'cv.orth',
	'cy.orth',
	'da.orth',
	'de.orth',
	'dz.orth',
	'el.orth',
	'en.orth',
	'eo.orth',
	'es.orth',
	'et.orth',
	'eu.orth',
	'fa.orth',
	'fi.orth',
	'fj.orth',
	'fo.orth',
	'fr.orth',
	'ff.orth',
	'fur.orth',
	'fy.orth',
	'ga.orth',
	'gd.orth',
	'gez.orth',
	'gl.orth',
	'gn.orth',
	'gu.orth',
	'gv.orth',
	'ha.orth',
	'haw.orth',
	'he.orth',
	'hi.orth',
	'ho.orth',
	'hr.orth',
	'hu.orth',
	'hy.orth',
	'ia.orth',
	'ig.orth',
	'id.orth',
	'ie.orth',
	'ik.orth',
	'io.orth',
	'is.orth',
	'it.orth',
	'iu.orth',
	'ja.orth',
	'ka.orth',
	'kaa.orth',
	'ki.orth',
	'kk.orth',
	'kl.orth',
	'km.orth',
	'kn.orth',
	'ko.orth',
	'kok.orth',
	'ks.orth',
	'ku_am.orth',
	'ku_ir.orth',
	'kum.orth',
	'kv.orth',
	'kw.orth',
	'ky.orth',
	'la.orth',
	'lb.orth',
	'lez.orth',
	'ln.orth',
	'lo.orth',
	'lt.orth',
	'lv.orth',
	'mg.orth',
	'mh.orth',
	'mi.orth',
	'mk.orth',
	'ml.orth',
	'mn_cn.orth',
	'mo.orth',
	'mr.orth',
	'mt.orth',
	'my.orth',
	'nb.orth',
	'nds.orth',
	'ne.orth',
	'nl.orth',
	'nn.orth',
	'no.orth',
	'nr.orth',
	'nso.orth',
	'ny.orth',
	'oc.orth',
	'om.orth',
	'or.orth',
	'os.orth',
	'pa.orth',
	'pl.orth',
	'ps_af.orth',
	'ps_pk.orth',
	'pt.orth',
	'rm.orth',
	'ro.orth',
	'ru.orth',
	'sa.orth',
	'sah.orth',
	'sco.orth',
	'se.orth',
	'sel.orth',
	'sh.orth',
	'shs.orth',
	'si.orth',
	'sk.orth',
	'sl.orth',
	'sm.orth',
	'sma.orth',
	'smj.orth',
	'smn.orth',
	'sms.orth',
	'so.orth',
	'sq.orth',
	'sr.orth',
	'ss.orth',
	'st.orth',
	'sv.orth',
	'sw.orth',
	'syr.orth',
	'ta.orth',
	'te.orth',
	'tg.orth',
	'th.orth',
	'ti_er.orth',
	'ti_et.orth',
	'tig.orth',
	'tk.orth',
	'tl.orth',
	'tn.orth',
	'to.orth',
	'tr.orth',
	'ts.orth',
	'tt.orth',
	'tw.orth',
	'tyv.orth',
	'ug.orth',
	'uk.orth',
	'ur.orth',
	'uz.orth',
	've.orth',
	'vi.orth',
	'vo.orth',
	'vot.orth',
	'wa.orth',
	'wen.orth',
	'wo.orth',
	'xh.orth',
	'yap.orth',
	'yi.orth',
	'yo.orth',
	'zh_cn.orth',
	'zh_hk.orth',
	'zh_mo.orth',
	'zh_sg.orth',
	'zh_tw.orth',
	'zu.orth',
	'ak.orth',
	'an.orth',
	'ber_dz.orth',
	'ber_ma.orth',
	'byn.orth',
	'crh.orth',
	'csb.orth',
	'dv.orth',
	'ee.orth',
	'fat.orth',
	'fil.orth',
	'hne.orth',
	'hsb.orth',
	'ht.orth',
	'hz.orth',
	'ii.orth',
	'jv.orth',
	'kab.orth',
	'kj.orth',
	'kr.orth',
	'ku_iq.orth',
	'ku_tr.orth',
	'kwm.orth',
	'lg.orth',
	'li.orth',
	'mai.orth',
	'mn_mn.orth',
	'ms.orth',
	'na.orth',
	'ng.orth',
	'nv.orth',
	'ota.orth',
	'pa_pk.orth',
	'pap_an.orth',
	'pap_aw.orth',
	'qu.orth',
	'quz.orth',
	'rn.orth',
	'rw.orth',
	'sc.orth',
	'sd.orth',
	'sg.orth',
	'sid.orth',
	'sn.orth',
	'su.orth',
	'ty.orth',
	'wal.orth',
	'za.orth',
	'lah.orth',
	'nqo.orth',
	'brx.orth',
	'sat.orth',
	'doi.orth',
	'mni.orth',
]

genrule(
  name = 'fclang_rule',
  srcs = ['fc-lang/%s' % o for o in ORTH] + ['fc-lang/fclang.tmpl.h'],
  tools = [':fc-lang'],
  outs = ['fc-lang/fclang.h'],
  cmd = './$(location :fc-lang) -d `dirname $(location fc-lang/fclang.tmpl.h)` ' +
    ' '.join(['$(location fc-lang/%s)' % o for o in ORTH]) + ' < $(location fc-lang/fclang.tmpl.h) > $(OUTS)'
)

cc_binary(
  name = 'fc-glyphname',
  srcs = ['fc-glyphname/fc-glyphname.c'],
  deps = [':src_hdrs'],
  defines = DEFINES
)

genrule(
  name = 'fcglyphname_rule',
  srcs = ['fc-glyphname/zapfdingbats.txt', 'fc-glyphname/fcglyphname.tmpl.h'],
  tools = [':fc-glyphname'],
  outs = ['fc-glyphname/fcglyphname.h'],
  cmd = './$(location :fc-glyphname) $(location fc-glyphname/zapfdingbats.txt) < $(location fc-glyphname/fcglyphname.tmpl.h) > $(OUTS)'
)

genrule(
  name = 'fcblanks_rule',
  srcs = ['fc-blanks/fcblanks.tmpl.h', 'fc-blanks/fc-blanks.py'],
  outs = ['fc-blanks/fcblanks.h'],
  cmd = './$(location fc-blanks/fc-blanks.py) < $(location fc-blanks/fcblanks.tmpl.h) > $(OUTS)'
)

genrule(
  name = 'fcobjshash_gperf',
  srcs = ['src/fcobjshash.gperf.h', 'fontconfig/fontconfig.h', 'src/fcobjs.h'],
  outs = ['src/fcobjshash.gperf'],
  cmd = """$(CC) -E \
      -isystem `dirname $(location fontconfig/fontconfig.h)`/.. \
      -I `dirname $(location src/fcobjs.h)` \
      $(location src/fcobjshash.gperf.h) | \
    sed 's/^ *//;s/ *, */,/' | \
    grep '^[^#]' | \
    awk ' \
		  /CUT_OUT_BEGIN/ { no_write=1; next; }; \
		  /CUT_OUT_END/ { no_write=0; next; }; \
		  { if (!no_write) print; next; }; \
	  ' - > $(OUTS)"""
)

genrule(
   name = 'fcobjshash_h',
   srcs = ['src/fcobjshash.gperf'],
   outs = ['src/fcobjshash.h'],
   cmd = 'gperf -m 100 $(location src/fcobjshash.gperf) > $(OUTS)'
)

cc_library(
  name = 'fccase_h',
  hdrs = ['fc-case/fccase.h'],
)

cc_library(
  name = 'gen_hdrs',
  hdrs = [
    'fc-glyphname/fcglyphname.h',
    'fc-blanks/fcblanks.h',
    'fc-lang/fclang.h',
    'src/fcobjshash.h',
  ]
)

cc_library(
  name = "fontconfig_lib",
  hdrs = glob(['fontconfig/*.h']),
  srcs = glob(['src/*.c']),
  defines = DEFINES,
  deps = [
    '@freetype//:freetype',
    ':src_hdrs',
    ':gen_hdrs',
    ':fccase_h',
  ],
  visibility = ['//visibility:public']
)
